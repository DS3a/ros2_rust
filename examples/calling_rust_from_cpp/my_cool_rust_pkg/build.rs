use std::env;
use std::path::PathBuf;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();

    let package_name = env::var("CARGO_PKG_NAME").unwrap();

    // TODO: Use this once https://github.com/ros2-rust/cargo-ament-build/issues/1#issuecomment-1128181399
    // is implemented
    // let out_dir = env::var("OUT_DIR").unwrap();
    // let output_file = out_dir
    //     .join("{package_name}.hpp");
    let output_file = format!("include/{}.hpp", package_name);

    cbindgen::Builder::new()
    	.with_crate(crate_dir)
    	.with_namespace(package_name)
        .with_autogen_warning("// Autogenerated by cbindgen")
    	.generate()
      .unwrap()
      .write_to_file(&output_file);
}

/// Find the location of the `target/` directory. Note that this may be 
/// overridden by `cmake`, so we also need to check the `CARGO_TARGET_DIR` 
/// variable.
fn target_dir() -> PathBuf {
    if let Ok(target) = env::var("CARGO_TARGET_DIR") {
        PathBuf::from(target)
    } else {
        PathBuf::from(env::var("CARGO_MANIFEST_DIR").unwrap()).join("target")
    }
}
